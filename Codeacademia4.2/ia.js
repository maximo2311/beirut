const prompt = require('prompt-sync')({sigint: true}); console.log('hola bienvenido a mi juego'); console.log('Para moverte debes usar a, s, d, w'); const hat = '^'; const hole = 'O'; const fieldCharacter = '░'; const pathCharacter = '*'; class Field { constructor (camp) { this._camp = camp; this._positionY = 0; this._positionX = 0; this._status = true; this._winner = false; } get camp () { return this._camp; } print () { this._camp.forEach(row => { console.log(row.join(' ')); }); } direcction (move) { switch (move) { case 'a': this._positionX--; break; case 'd': this._positionX++; break; case 'w': this._positionY--; break; case 's': this._positionY++; break; default: console.log('Esa no es una de las teclas de movimiento'); return; } } lose (map) { if (this._positionY < 0 || this._positionY >= map.length) { this._status = false; } else if (this._positionX < 0 || this._positionX >= map[this._positionY].length) { this._status = false; } else if (map[this._positionY][this._positionX] === hole) { this._status = false; } else if (map[this._positionY][this._positionX] === hat) { this._winner = true; } } moving (ejeX, ejeY, map) { if (map[ejeY][ejeX] === fieldCharacter) { map[ejeY][ejeX] = pathCharacter; } else if (map[ejeY][ejeX] === hole) { this._status = false; } else if (map[ejeY][ejeX] === hat) { this._winner = true; } } game () { do { this.print(); const move = prompt('¿A dónde te quieres mover? '); this.direcction(move); this.lose(this._camp); if (this._status && !this._winner) { this.moving(this._positionX, this._positionY, this._camp); } } while (this._status && !this._winner); if (this._status === false) { console.log('Lo lamento pero perdiste'); } else if (this._winner === true) { console.log('¡Felicidades, ganaste!'); } } } const myField = new Field([ ['*', '░', 'O'], ['░', 'O', '░'], ['░', '^', '░'], ]); myField.game();